{"version":3,"sources":["components/layout/SignInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","class","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","className","uid","Notifications","notifications","style","opacity","map","item","key","id","user","content","Date","time","toDate","toDateString","ProjectSummary","project","title","authorFirstName","authorLastName","datePosted","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorId","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","err","CreateProject","createProject","history","push","fireStore","add","error","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b52b7fca.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { signOut } from '../../store/actions/authActions'\nconst SignInLinks = (props) => {\n\treturn(\n\t\t<ul class=\"right\">\n\t\t\t<li> <NavLink to=\"/createproject\"> New Project </NavLink> </li>\n\t\t\t<li> <a onClick={props.signOut}> Log Out </a> </li>\n\t\t\t<li> <NavLink to=\"/\" class=\"btn btn-floating torquise lighten-1\"> {props.profile.initials} </NavLink> </li>\n\t\t</ul>\n\t)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsignOut: () => { dispatch(signOut()) }\n\t}\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch( {type: \"LOGIN_SUCCESS\"} ) \n        }).catch(() => {\n            dispatch({ type: \"LOGIN_ERROR\" })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then( () => {\n            dispatch({type: \"SIGNOUT_SUCCESS\"})\n        } )\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type: \"SIGNUP_SUCCESS\"})\n        }).catch((err) => {\n            dispatch({type: \"SIGNUP_ERROR\", err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from \"react-router-dom\"\n\nconst SignedOutLinks = () => {\n\treturn(\n\t\t<ul class=\"right\">\n\t\t\t<li> <NavLink to=\"/signup\"> Sign Up </NavLink> </li>\n\t\t\t<li> <NavLink to=\"/signin\"> Log In </NavLink> </li>\n\t\t</ul>\n\t)\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport {Link } from \"react-router-dom\"\nimport SignInLinks from \"./SignInLinks.js\"\nimport SignedOutLinks from \"./SignedOutLinks.js\"\nimport { connect } from 'react-redux'\n\nconst NavBar = (props) => {\n\n\tconst { auth, profile } = props;\n\n\treturn(\n\t\t<nav className=\"nav-wrapper grey darken-3\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<Link to='/' className=\"brand-logo\"> Smart Plan </Link>\n\t\t\t\t{auth.uid ? <SignInLinks profile={profile}/> : <SignedOutLinks/>}\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n\nconst mapStateToProps = (state) => {\n\tconsole.log(state)\n\treturn{\n\t\tauth: state.firebase.auth,\n\t\tprofile: state.firebase.profile\n\t}\n}\n\nexport default connect(mapStateToProps)(NavBar)","import React from 'react';\n\nconst Notifications = (props) => {\n\n\tconst { notifications } = props;\n\treturn(\n\t\t\n\n\t\t<div className=\"section \">\n\t\t\t<div className=\"card z-depth-0\" style={{opacity: 0.7}}>\n\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t<span className=\"card-title\">Notifications</span>\n\t\t\t\t\t<ul className=\"notifications\">\n\t\t\t\t\t\t{notifications && notifications.map(item => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<li key={item.id}>\n\t\t\t\t\t\t\t\t\t<span class=\"pink-text \">\n\t\t\t\t\t\t\t\t\t\t{item.user} {item.content} {new Date(item.time.toDate()).toDateString()}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Notifications;\n","import React from 'react'\n\nconst ProjectSummary = ({project}) => {\n\treturn(\n\t\t<div class=\"card z-depth-0 project-summary\">\n\t\t\t<div class=\"card-content grey-text text-darken-3\">\n\t\t\t\t<span class=\"card-title\"> {project.title} </span>\n\t\t\t\t<p> {project.authorFirstName} {project.authorLastName} </p>\n\t\t\t\t<p class=\"grey-text\"> {new Date(project.datePosted.toDate()).toDateString()} </p>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n\nexport default ProjectSummary","import React from 'react';\nimport ProjectSummary from \"./ProjectSummary.js\"\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n\treturn(\n\t\t<div class=\"project-list section\">\n\t\t\t{\n\t\t\t\tprojects && projects.map(project => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<Link to={'/project/' + project.id} key={project.id}>\n\t\t\t\t\t\t\t<ProjectSummary project={project} />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default ProjectList;","import React, {Component} from \"react\"\nimport Notifications from \"./Notifications.js\"\nimport ProjectList from \"../project/ProjectList.js\"\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from \"react-redux-firebase\"\nimport {compose} from \"redux\"\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component{\n\t\n\trender(){\n\n\t\t\n\t\tconst {projects, auth, notifications} = this.props;\n\t\tif(!auth.uid){\n\t\t\treturn (<Redirect to=\"/signin\"/>)\n\t\t}\n\t\treturn(\n\t\t\t<div class=\"dashboard container\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col s12 m6\">\n\t\t\t\t\t\t<ProjectList projects={projects}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col s12 m5 offset-m1\">\n\t\t\t\t\t\t<Notifications notifications={notifications}/>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\t\n\treturn {\n\t\t\n\t\tprojects: state.firestore.ordered.projects,\n\t\tauth: state.firebase.auth,\n\t\tnotifications: state.firestore.ordered.notifications\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps),\n\tfirestoreConnect([\n\t\t{collection: 'projects', orderBy: ['datePosted', 'desc']},\n\t\t{collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n\t])\n)(Dashboard)\n","import React from \"react\"\nimport {compose} from 'redux'\nimport {connect} from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport {Redirect} from 'react-router-dom'\n\nconst ProjectDetails = (props) => {\n    const id = props.match.params.id\n    \n    const {project, auth} = props;\n    \n    if(!auth.uid){\n        return(\n            <Redirect to='../signin'/>\n        )\n    }\n    return(\n\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title} - {project.authorId}</span>\n                    <p>{project.content} </p>\n                </div>\n                <div className=\"card-action lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div>20th Jan, 2020</div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = (state,ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return{\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails);","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\n class SignIn extends Component {\n\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if(auth.uid){\n            return(\n                <Redirect to=\"/\" />\n            )\n        }\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5>Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\" >Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\" >Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn btn-lighten-1\">Log In</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}  \n                        </div>\n\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signIn: (credentials) => { dispatch(signIn(credentials)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {signUp} from '../../store/actions/authActions'\n\n class SignUp extends Component {\n\n    state = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n    render() {\n        const {auth, authError} = this.props\n        if(auth.uid){\n            return <Redirect to=\"/\" />\n        }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5>Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\" >Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\" >Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\" >First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\" >Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn btn-lighten-1\">Sign Up</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport {createProject} from \"../../store/actions/projectActions\"\nimport {connect} from \"react-redux\"\nimport { Redirect } from 'react-router-dom'\n\n class CreateProject extends Component {\n\n    state = {\n        title: \"\",\n        content: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state )\n        this.props.history.push('/');\n    }\n\n    \n\n    render() {\n\n        const { auth } = this.props;\n        if(!auth.uid){\n            return(\n                <Redirect to=\"signin\"/>\n            )\n        }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5>New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\" >Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\" >Content</label>\n                        <input type=\"text\" id=\"content\" className=\"materalize-textarea\" onChange={this.handleChange}/>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn btn-lighten-1\">Save Project</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return{\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) =>  dispatch(createProject(project)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return(dispatch, getState, { getFirebase, getFirestore }) => {\n\n        const fireStore = getFirestore()\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid\n        fireStore.collection('projects').add({\n            \n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            datePosted: new Date()\n            }\n            \n        ).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project: project}); \n        }).catch((error) => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', error}); \n        })\n    \n        \n    }\n} ","import React from 'react';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport NavBar from \"./components/layout/NavBar.js\"\nimport Dashboard from \"./components/dashboard/Dashboard.js\"\nimport ProjectDetails from \"./components/project/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\"\nimport SignUp from \"./components/auth/SignUp\"\nimport CreateProject from \"./components/project/CreateProject\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/createproject\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    \n    switch(action.type){\n        case \"LOGIN_ERROR\":\n            \n            return{\n                ...state,\n                authError: \"Login Unsuccessful\"\n            }\n        case \"LOGIN_SUCCESS\":\n            return{\n                ...state,\n                authError: null\n            }\n        case \"SIGNOUT_SUCCESS\":\n            console.log(\"Sign out success\");\n            return state\n        case \"SIGNUP_SUCCESS\":\n            console.log(\"SignUp Successful\")\n            return{\n                ...state,\n                authError: null\n            }\n        case \"SIGNUP_ERROR\":\n            console.log(\"SignUp Unsucessful\")\n            return{\n                ...state,\n                authError: action.err.message\n            }\n        default: \n            return state\n    }\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        {id: '1', title: \"Clean room\" , content: \"content 1\"},\n        {id: '2', title: \"Do some coding\" , content: \"content 2\"},\n        {id: '3', title: \"Wash clothes\" , content: \"content 3\"},\n        {id: '4', title: \"Go Shopping\" , content: \"content 4\"},\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('create project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log(\"ERROR:\", action.error)\n            return state;\n        default: \n            return state;\n    }\n    \n}\n\nexport default projectReducer;","import authReducer from \"./authReducer\"\nimport projectReducer from \"./projectReducer\"\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from \"redux-firestore\"\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer\n","import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAEdszVjqcNZLax3XcwToQKRQOntmifODw\",\n    authDomain: \"smart-plan-database.firebaseapp.com\",\n    databaseURL: \"https://smart-plan-database.firebaseio.com\",\n    projectId: \"smart-plan-database\",\n    storageBucket: \"smart-plan-database.appspot.com\",\n    messagingSenderId: \"42937548826\",\n    appId: \"1:42937548826:web:9c267d546050d79d8951a3\",\n    measurementId: \"G-L1RFJHZYT2\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true }); \n\n  export default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from \"./store/reducers/rootReducer\"\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}